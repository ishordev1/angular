{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/employee.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./employee-form/employee-form.component\";\nfunction EmployeesComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵlistener(\"click\", function EmployeesComponent_tr_17_Template_td_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const emp_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.populateForm(emp_r1));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 7);\n    i0.ɵɵlistener(\"click\", function EmployeesComponent_tr_17_Template_td_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const emp_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.populateForm(emp_r1));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"i\", 8);\n    i0.ɵɵlistener(\"click\", function EmployeesComponent_tr_17_Template_i_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const emp_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onDelete(emp_r1._id));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const emp_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r1.fullName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r1.position);\n  }\n}\nexport class EmployeesComponent {\n  constructor(service, toastr) {\n    this.service = service;\n    this.toastr = toastr;\n  }\n  ngOnInit() {\n    this.service.fetchEmployeeList();\n  }\n  populateForm(selectedRecord) {\n    this.service.employeeForm.setValue({\n      _id: selectedRecord._id,\n      fullName: selectedRecord.fullName,\n      location: selectedRecord.location,\n      position: selectedRecord.position,\n      salary: selectedRecord.salary\n    });\n  }\n  onDelete(_id) {\n    if (confirm('Are you sure to delete this record?')) {\n      this.service.deleteEmployee(_id).subscribe(res => {\n        this.service.fetchEmployeeList();\n        this.toastr.error('Deleted successfully', 'Employee Register');\n      });\n    }\n  }\n}\nEmployeesComponent.ɵfac = function EmployeesComponent_Factory(t) {\n  return new (t || EmployeesComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nEmployeesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeesComponent,\n  selectors: [[\"app-employees\"]],\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"text-bg-dark\", \"text-center\", \"rounded-bottom\", \"mt-2\", \"py-2\"], [1, \"\"], [1, \"p-4\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"far\", \"fa-trash-alt\", \"fa-lg\", \"text-secondary\", 3, \"click\"]],\n  template: function EmployeesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \" Employee Register \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n      i0.ɵɵelement(6, \"app-employee-form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"table\", 5)(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, EmployeesComponent_tr_17_Template, 7, 2, \"tr\", 6);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.service.list);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.EmployeeFormComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;IAoBoBA,0BAAqC;IAC7BA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAACA,YAAgB;IAAAA,iBAAK;IACrDA,6BAAgC;IAA5BA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAACA,YAAgB;IAAAA,iBAAK;IACrDA,0BAAI;IACiDA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAACA,iBAAI;;;;IAHrDA,eAAgB;IAAhBA,qCAAgB;IAChBA,eAAgB;IAAhBA,qCAAgB;;;ACXxE,OAAM,MAAOC,kBAAkB;EAE7BC,YAAmBC,OAAwB,EAAUC,MAAqB;IAAvD,YAAO,GAAPD,OAAO;IAA2B,WAAM,GAANC,MAAM;EAAmB;EAE9EC,QAAQ;IACN,IAAI,CAACF,OAAO,CAACG,iBAAiB,EAAE;EAClC;EAEAC,YAAY,CAACC,cAAwB;IACnC,IAAI,CAACL,OAAO,CAACM,YAAY,CAACC,QAAQ,CAAC;MACjCC,GAAG,EAAEH,cAAc,CAACG,GAAG;MACvBC,QAAQ,EAAEJ,cAAc,CAACI,QAAQ;MACjCC,QAAQ,EAAEL,cAAc,CAACK,QAAQ;MACjCC,QAAQ,EAAEN,cAAc,CAACM,QAAQ;MACjCC,MAAM,EAAEP,cAAc,CAACO;KACxB,CAAC;EACJ;EAEAC,QAAQ,CAACL,GAAW;IAClB,IAAIM,OAAO,CAAC,qCAAqC,CAAC,EAAE;MAClD,IAAI,CAACd,OAAO,CAACe,cAAc,CAACP,GAAG,CAAC,CAACQ,SAAS,CAACC,GAAG,IAAG;QAC/C,IAAI,CAACjB,OAAO,CAACG,iBAAiB,EAAE;QAChC,IAAI,CAACF,MAAM,CAACiB,KAAK,CAAC,sBAAsB,EAAE,mBAAmB,CAAC;MAChE,CAAC,CAAC;;EAEN;;AAzBWpB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX/B1B,8BAA+D;MAEvDA,mCACJ;MAAAA,iBAAK;MAETA,8BAAiB;MAGLA,oCAAuC;MAC3CA,iBAAM;MACNA,8BAAsB;MAIFA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,sBAAS;MACbA,iBAAK;MAETA,8BAAO;MACHA,mEAMK;MACTA,iBAAQ;;;MAPgBA,gBAAe;MAAfA,0CAAe","names":["i0","EmployeesComponent","constructor","service","toastr","ngOnInit","fetchEmployeeList","populateForm","selectedRecord","employeeForm","setValue","_id","fullName","location","position","salary","onDelete","confirm","deleteEmployee","subscribe","res","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Language\\git project\\angular\\crud-with-angular-and-nodejs\\client\\src\\app\\employees\\employees.component.html","D:\\Language\\git project\\angular\\crud-with-angular-and-nodejs\\client\\src\\app\\employees\\employees.component.ts"],"sourcesContent":["<div class=\"text-bg-dark text-center rounded-bottom mt-2 py-2\">\r\n    <h1 class=\"\">\r\n        Employee Register\r\n    </h1>\r\n</div>\r\n<div class=\"p-4\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <app-employee-form></app-employee-form>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Position</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let emp of service.list\">\r\n                        <td (click)=\"populateForm(emp)\">{{emp.fullName}}</td>\r\n                        <td (click)=\"populateForm(emp)\">{{emp.position}}</td>\r\n                        <td>\r\n                            <i class=\"far fa-trash-alt fa-lg text-secondary\" (click)=\"onDelete(emp._id)\"></i>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Employee } from '../shared/employee.model';\r\nimport { EmployeeService } from '../shared/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class EmployeesComponent implements OnInit {\r\n\r\n  constructor(public service: EmployeeService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.fetchEmployeeList();\r\n  }\r\n\r\n  populateForm(selectedRecord: Employee) {\r\n    this.service.employeeForm.setValue({\r\n      _id: selectedRecord._id,\r\n      fullName: selectedRecord.fullName,\r\n      location: selectedRecord.location,\r\n      position: selectedRecord.position,\r\n      salary: selectedRecord.salary,\r\n    })\r\n  }\r\n\r\n  onDelete(_id: string) {\r\n    if (confirm('Are you sure to delete this record?')) {\r\n      this.service.deleteEmployee(_id).subscribe(res => {\r\n        this.service.fetchEmployeeList();\r\n        this.toastr.error('Deleted successfully', 'Employee Register')\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}